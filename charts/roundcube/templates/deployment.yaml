apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "roundcube.fullname" . }}
  labels:
    {{- include "roundcube.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "roundcube.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "roundcube.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "roundcube.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.roundcube.composerPlugins }}
        - name: install-plugins
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              set -e
              echo "Installing composer plugins..."
              cd /var/www/html

              {{- range .Values.roundcube.composerPlugins }}
              echo "Installing plugin: {{ . }}"
              composer require {{ . }} --no-interaction --no-progress --no-dev --optimize-autoloader
              {{- end }}

              echo "All plugins installed successfully"
              echo "Installed plugins:"
              find /var/www/html/plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \;
          volumeMounts:
            - name: plugins
              mountPath: /var/www/html/plugins
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            fsGroup: 33
        {{- end }}
        {{- if .Values.roundcube.pluginConfigs }}
        - name: configure-plugins
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              echo "Configuring plugins..."

              for config_file in /tmp/roundcube-plugin-configs/*.config.inc.php; do
                if [ -f "$$config_file" ]; then
                  filename=$$(basename "$$config_file")
                  plugin_name=$${filename%.config.inc.php}
                  target_dir="/var/www/html/plugins/$$plugin_name"

                  if [ -d "$$target_dir" ]; then
                    echo "Copying config for plugin: $$plugin_name"
                    config_content=$$(cat "$$config_file")

                    {{- if or .Values.roundcube.pluginSecrets .Values.roundcube.pluginSecretsExistingSecret }}
                    if [ -d /tmp/roundcube-plugin-secrets ]; then
                      for secret_file in /tmp/roundcube-plugin-secrets/*; do
                        if [ -f "$$secret_file" ]; then
                          secret_key=$$(basename "$$secret_file")
                          secret_value=$$(cat "$$secret_file")
                          config_content=$$(echo "$$config_content" | sed "s|{{ "{{" }} $$secret_key {{ "}}" }}|$$secret_value|g")
                        fi
                      done
                    fi
                    {{- end }}

                    echo "$$config_content" > "$$target_dir/config.inc.php"
                    chmod 644 "$$target_dir/config.inc.php"
                    echo "Config copied successfully for $$plugin_name"
                  else
                    echo "Warning: Plugin directory $$target_dir not found, skipping config"
                  fi
                fi
              done

              echo "Plugin configuration complete"
          volumeMounts:
            - name: plugins
              mountPath: /var/www/html/plugins
            - name: plugin-configs
              mountPath: /tmp/roundcube-plugin-configs
              readOnly: true
            {{- if or .Values.roundcube.pluginSecrets .Values.roundcube.pluginSecretsExistingSecret }}
            - name: plugin-secrets
              mountPath: /tmp/roundcube-plugin-secrets
              readOnly: true
            {{- end }}
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            fsGroup: 33
        {{- end }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: ROUNDCUBEMAIL_DEFAULT_HOST
              value: {{ .Values.roundcube.defaultHost | quote }}
            - name: ROUNDCUBEMAIL_DEFAULT_PORT
              value: {{ .Values.roundcube.defaultPort | quote }}
            - name: ROUNDCUBEMAIL_SMTP_SERVER
              value: {{ .Values.roundcube.smtpServer | quote }}
            - name: ROUNDCUBEMAIL_SMTP_PORT
              value: {{ .Values.roundcube.smtpPort | quote }}
            - name: ROUNDCUBEMAIL_SMTP_USER
              value: {{ .Values.roundcube.smtpUser | quote }}
            - name: ROUNDCUBEMAIL_SMTP_PASS
              value: {{ .Values.roundcube.smtpPass | quote }}
            - name: ROUNDCUBEMAIL_PLUGINS
              value: {{ join "," .Values.roundcube.plugins | quote }}
            - name: ROUNDCUBEMAIL_SKIN
              value: {{ .Values.roundcube.skin | quote }}
            - name: ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE
              value: {{ .Values.roundcube.uploadMaxFilesize | quote }}
            - name: ROUNDCUBEMAIL_DES_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "roundcube.fullname" . }}
                  key: des-key
            {{- if ne .Values.database.type "sqlite" }}
            - name: ROUNDCUBEMAIL_DB_TYPE
              value: {{ .Values.database.type | quote }}
            - name: ROUNDCUBEMAIL_DB_HOST
              value: {{ include "roundcube.databaseHost" . | quote }}
            - name: ROUNDCUBEMAIL_DB_PORT
              value: {{ .Values.database.external.port | quote }}
            - name: ROUNDCUBEMAIL_DB_NAME
              value: {{ .Values.database.external.name | quote }}
            - name: ROUNDCUBEMAIL_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "roundcube.databaseSecretName" . }}
                  key: {{ .Values.database.external.existingSecretUserKey }}
            - name: ROUNDCUBEMAIL_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "roundcube.databaseSecretName" . }}
                  key: {{ .Values.database.external.existingSecretPasswordKey }}
            {{- else }}
            - name: ROUNDCUBEMAIL_DB_TYPE
              value: "sqlite"
            - name: ROUNDCUBEMAIL_DB_DIR
              value: "/var/roundcube/db"
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: ROUNDCUBEMAIL_REDIS_HOST
              value: {{ .Values.redis.host | quote }}
            - name: ROUNDCUBEMAIL_REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            {{- if .Values.redis.password }}
            - name: ROUNDCUBEMAIL_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.existingSecret | default (include "roundcube.fullname" .) }}
                  key: {{ .Values.redis.existingSecretPasswordKey }}
            {{- end }}
            {{- end }}
            {{- if .Values.memcached.enabled }}
            - name: ROUNDCUBEMAIL_MEMCACHED_HOST
              value: {{ .Values.memcached.host | quote }}
            - name: ROUNDCUBEMAIL_MEMCACHED_PORT
              value: {{ .Values.memcached.port | quote }}
            {{- end }}
            {{- with .Values.roundcube.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            {{- if eq .Values.database.type "sqlite" }}
            - name: sqlite
              mountPath: {{ .Values.persistence.sqlitePath }}
            {{- end }}
            - name: temp
              mountPath: {{ .Values.persistence.tempPath }}
            - name: logs
              mountPath: {{ .Values.persistence.logsPath }}
            {{- end }}
            {{- if or .Values.roundcube.customConfig .Values.roundcube.multiDomain.enabled }}
            - name: custom-config
              mountPath: /var/roundcube/config/config.inc.php
              subPath: config.inc.php
            {{- end }}
            {{- if .Values.roundcube.composerPlugins }}
            - name: plugins
              mountPath: /var/www/html/plugins
            {{- end }}
            {{- with .Values.roundcube.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        {{- if eq .Values.database.type "sqlite" }}
        - name: sqlite
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-sqlite" (include "roundcube.fullname" .)) }}
        {{- end }}
        - name: temp
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- end }}
        {{- if or .Values.roundcube.customConfig .Values.roundcube.multiDomain.enabled }}
        - name: custom-config
          configMap:
            name: {{ include "roundcube.fullname" . }}-custom
        {{- end }}
        {{- if .Values.roundcube.composerPlugins }}
        - name: plugins
          emptyDir: {}
        {{- end }}
        {{- if .Values.roundcube.pluginConfigs }}
        - name: plugin-configs
          configMap:
            name: {{ include "roundcube.fullname" . }}-plugin-configs
        {{- end }}
        {{- if or .Values.roundcube.pluginSecrets .Values.roundcube.pluginSecretsExistingSecret }}
        - name: plugin-secrets
          secret:
            secretName: {{ .Values.roundcube.pluginSecretsExistingSecret | default (printf "%s-plugin-secrets" (include "roundcube.fullname" .)) }}
        {{- end }}
        {{- with .Values.roundcube.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

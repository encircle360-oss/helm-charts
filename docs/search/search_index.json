{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"encircle360 OSS Helm Charts","text":"<p>Welcome to the encircle360 OSS Helm Charts repository! This collection provides production-ready open source Helm charts for deploying various applications on Kubernetes, maintained and sponsored by encircle360 GmbH together with the open source community, partners and friends.</p> <p>Documentation: https://encircle360-oss.github.io/helm-charts/docs/</p>"},{"location":"#available-charts","title":"Available Charts","text":"Chart Description Version CNPG Database Manager Multi-database and multi-tenant management for CloudNativePG clusters Roundcube A free and open source webmail solution with a desktop-like user interface"},{"location":"#installation","title":"Installation","text":""},{"location":"#add-the-repository","title":"Add the Repository","text":"<pre><code>helm repo add encircle360 https://encircle360-oss.github.io/helm-charts\nhelm repo update\n</code></pre>"},{"location":"#install-a-chart","title":"Install a Chart","text":"<pre><code># Install Roundcube\nhelm install my-roundcube encircle360/roundcube\n\n# Install CNPG Database Manager\nhelm install my-databases encircle360/cnpg-database-manager\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<p>Each chart comes with a <code>values.yaml</code> file that contains the default configuration. You can override these values by:</p> <ol> <li> <p>Using a custom values file: <pre><code>helm install my-release encircle360/chart-name -f my-values.yaml\n</code></pre></p> </li> <li> <p>Using <code>--set</code> flags: <pre><code>helm install my-release encircle360/chart-name --set key=value\n</code></pre></p> </li> </ol>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Kubernetes 1.19+</li> <li>Helm 3.8.0+</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions from the community! Please see our Contributing Guide for details.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the Apache License 2.0 - see the LICENSE file for details.</p>"},{"location":"#maintainers-sponsors","title":"Maintainers &amp; Sponsors","text":"<p>This project is maintained and sponsored by encircle360 GmbH, providing enterprise-grade Kubernetes and cloud-native solutions. We work together with our community, partners, and friends to deliver high-quality Helm charts.</p>"},{"location":"#support-professional-services","title":"Support &amp; Professional Services","text":""},{"location":"#community-support","title":"Community Support","text":"<ul> <li>Chart Issues: For Helm chart bugs and feature requests, create an issue</li> <li>General Questions: For questions and discussions, use GitHub Discussions</li> <li>Application Bugs: For bugs within the applications themselves (not chart-related), please report them to the respective upstream project</li> </ul>"},{"location":"#professional-support","title":"Professional Support","text":"<p>For professional support, consulting, custom development, or enterprise solutions, contact us at hello@encircle360.com</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>These Helm charts are provided \"AS IS\" without warranty of any kind. While we strive to maintain high-quality charts and test them thoroughly:</p> <ul> <li>You use these charts at your own risk</li> <li>We recommend thorough testing in non-production environments first</li> <li>Charts may contain bugs or security vulnerabilities</li> <li>We are not liable for any damages or losses resulting from the use of these charts</li> </ul> <p>For production deployments requiring guaranteed support and SLAs, please contact us about our professional services.</p>"},{"location":"#chart-sources","title":"Chart Sources","text":"<p>The source code for all charts can be found in the charts directory of our repository.</p>"},{"location":"charts/cnpg-database-manager/","title":"cnpg-database-manager","text":"<p>Multi-database and multi-tenant management for CloudNativePG clusters with automatic secret generation and isolation</p> <p>Homepage: https://github.com/encircle360-oss/helm-charts/tree/main/charts/cnpg-database-manager</p> <p>\u26a0\ufe0f UNDER CONSTRUCTION  This chart is currently under active development and has not been battle-tested in production environments.  NOT PRODUCTION READY - Use at your own risk and thoroughly test in non-production environments first.</p>"},{"location":"charts/cnpg-database-manager/#why-this-chart","title":"Why This Chart?","text":"<p>The official CloudNativePG <code>cluster</code> chart only supports single database per deployment. This chart fills the gap by providing:</p> <ul> <li>Multi-Database Management: Deploy multiple databases in one PostgreSQL cluster</li> <li>Automatic Secret Generation: Each database gets isolated credentials</li> <li>Secret Replication: Optional secret distribution to application namespaces</li> <li>Multi-Tenant Ready: Perfect for consolidating multiple lightweight databases</li> </ul> <p>Use this chart when you want to consolidate multiple applications into one PostgreSQL cluster while maintaining security isolation.</p>"},{"location":"charts/cnpg-database-manager/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes 1.24+</li> <li>Helm 3.8+</li> <li>CloudNativePG operator installed (v1.25+)</li> </ul>"},{"location":"charts/cnpg-database-manager/#installing-the-chart","title":"Installing the Chart","text":"<p>To install the chart with the release name <code>my-databases</code>:</p> <pre><code>helm repo add encircle360-oss https://encircle360-oss.github.io/helm-charts/\nhelm repo update\nhelm install my-databases encircle360-oss/cnpg-database-manager\n</code></pre>"},{"location":"charts/cnpg-database-manager/#uninstalling-the-chart","title":"Uninstalling the Chart","text":"<p>To uninstall/delete the <code>my-databases</code> deployment:</p> <pre><code>helm uninstall my-databases\n</code></pre>"},{"location":"charts/cnpg-database-manager/#configuration","title":"Configuration","text":""},{"location":"charts/cnpg-database-manager/#basic-example-single-cluster-with-multiple-databases","title":"Basic Example - Single Cluster with Multiple Databases","text":"<pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 50Gi\n      storageClass: standard\n    databases:\n      - name: keycloak\n        owner: keycloak\n      - name: paperless\n        owner: paperless\n      - name: n8n\n        owner: n8n\n</code></pre> <p>This creates: - One PostgreSQL cluster named <code>main</code> with 3 instances - Three separate databases with isolated credentials - Automatic secret generation for each database</p>"},{"location":"charts/cnpg-database-manager/#multi-cluster-setup","title":"Multi-Cluster Setup","text":"<pre><code>clusters:\n  production:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 100Gi\n    databases:\n      - name: api-prod\n        owner: api\n      - name: web-prod\n        owner: web\n\n  staging:\n    enabled: true\n    instances: 1\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 20Gi\n    databases:\n      - name: api-staging\n        owner: api\n      - name: web-staging\n        owner: web\n</code></pre>"},{"location":"charts/cnpg-database-manager/#backup-configuration","title":"Backup Configuration","text":"<pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 50Gi\n    backup:\n      enabled: true\n      schedule: \"0 0 * * *\"\n      retentionPolicy: \"30d\"\n      s3:\n        bucket: my-postgres-backups\n        region: eu-central-1\n        path: /cluster-main\n        credentials:\n          existingSecret: s3-credentials\n    databases:\n      - name: production-db\n        owner: app\n</code></pre>"},{"location":"charts/cnpg-database-manager/#monitoring-with-prometheus","title":"Monitoring with Prometheus","text":"<pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 50Gi\n    monitoring:\n      enabled: true\n      podMonitor:\n        enabled: true\n    databases:\n      - name: app-db\n        owner: app\n</code></pre>"},{"location":"charts/cnpg-database-manager/#multiple-databases-in-one-cluster","title":"Multiple Databases in One Cluster","text":"<pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 50Gi\n    databases:\n      - name: keycloak\n        owner: keycloak\n      - name: paperless\n        owner: paperless\n</code></pre>"},{"location":"charts/cnpg-database-manager/#advanced-postgresql-configuration","title":"Advanced PostgreSQL Configuration","text":"<pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 100Gi\n      storageClass: fast-ssd\n    resources:\n      requests:\n        memory: \"4Gi\"\n        cpu: \"2000m\"\n      limits:\n        memory: \"8Gi\"\n        cpu: \"4000m\"\n    postgresql:\n      parameters:\n        max_connections: \"300\"\n        shared_buffers: \"2GB\"\n        effective_cache_size: \"6GB\"\n        maintenance_work_mem: \"512MB\"\n        checkpoint_completion_target: \"0.9\"\n        wal_buffers: \"16MB\"\n        default_statistics_target: \"100\"\n        random_page_cost: \"1.1\"\n        effective_io_concurrency: \"200\"\n        work_mem: \"6990kB\"\n        min_wal_size: \"1GB\"\n        max_wal_size: \"4GB\"\n    databases:\n      - name: highload-app\n        owner: app\n</code></pre>"},{"location":"charts/cnpg-database-manager/#advanced-using-additionalclusterspec","title":"Advanced: Using additionalClusterSpec","text":"<p>For CloudNativePG features not explicitly supported by the chart, use <code>additionalClusterSpec</code> to pass any valid CloudNativePG Cluster spec fields.</p> <p>Why Object-Based Configuration?</p> <p>This chart uses an object-based approach (YAML dictionary) for <code>additionalClusterSpec</code> rather than a string-based approach (multiline string). This design choice provides:</p> <ul> <li>\u2705 Type Safety: Schema validation catches configuration errors before deployment</li> <li>\u2705 IDE Support: Autocomplete and validation in modern editors</li> <li>\u2705 Structured API: CloudNativePG has a well-defined API schema (unlike generic Kubernetes resources)</li> <li>\u2705 GitOps Friendly: Proper YAML parsing and diff tools work correctly</li> <li>\u2705 Merge Safety: Helm's YAML processing prevents malformed output</li> </ul> <p>Alternative approaches (like HashiCorp Consul's string-based <code>additionalSpec</code>) are designed for less structured APIs where raw YAML flexibility is needed. For CloudNativePG's typed API, the object-based approach is superior.</p> <p>Usage:</p> <pre><code>clusters:\n  main:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:18\n    storage:\n      size: 100Gi\n    databases:\n      - name: myapp\n        owner: myuser\n\n    # Pass any CloudNativePG Cluster spec field\n    additionalClusterSpec:\n      # Enable superuser access for admin tools\n      enableSuperuserAccess: true\n\n      # Configure pod affinity for multi-zone HA\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: cnpg.io/cluster\n                    operator: In\n                    values: [main]\n              topologyKey: topology.kubernetes.io/zone\n\n      # Custom certificates\n      certificates:\n        serverCASecret: my-ca-secret\n        serverTLSSecret: my-tls-secret\n\n      # Replication tuning\n      minSyncReplicas: 1\n      maxSyncReplicas: 2\n\n      # Separate WAL storage\n      walStorage:\n        size: 50Gi\n        storageClass: fast-nvme\n</code></pre> <p>Important Notes:</p> <ul> <li>Fields in <code>additionalClusterSpec</code> are merged into the Cluster CRD spec using Helm's <code>toYaml</code> function</li> <li>This allows using any CloudNativePG feature without waiting for chart updates</li> <li>The object-based approach provides validation and type safety through the values schema</li> </ul> <p>\u26a0\ufe0f Avoid Overriding Chart-Managed Fields</p> <p>To prevent conflicts, do not define these fields in <code>additionalClusterSpec</code> (use the chart's dedicated parameters instead):</p> Field Use Instead <code>instances</code> Chart parameter: <code>clusters.&lt;name&gt;.instances</code> <code>imageName</code> Chart parameter: <code>clusters.&lt;name&gt;.imageName</code> <code>storage</code> Chart parameter: <code>clusters.&lt;name&gt;.storage</code> <code>managed.roles</code> Automatically generated from <code>clusters.&lt;name&gt;.databases</code> <code>postgresql.parameters</code> Chart parameter: <code>clusters.&lt;name&gt;.maxConnections</code>, <code>sharedBuffers</code>, etc. <code>backup</code> Chart parameter: <code>clusters.&lt;name&gt;.backup</code> <code>bootstrap.initdb</code> Chart parameter: <code>clusters.&lt;name&gt;.initdb.postInitSQL</code> <code>resources</code> Chart parameter: <code>clusters.&lt;name&gt;.resources</code> <code>monitoring</code> Chart parameter: <code>clusters.&lt;name&gt;.monitoring</code> <p>Best Practices:</p> <ol> <li>Use <code>additionalClusterSpec</code> for fields not exposed by the chart</li> <li>Consult the CloudNativePG API Reference for available fields</li> <li>Test configurations with <code>helm template</code> before applying</li> <li>Document why you're using <code>additionalClusterSpec</code> in your values file comments</li> </ol> <p>Common Use Cases:</p> <ul> <li>High Availability: <code>affinity</code>, <code>topologySpreadConstraints</code></li> <li>Security: <code>enableSuperuserAccess</code>, <code>certificates</code></li> <li>Replication: <code>minSyncReplicas</code>, <code>maxSyncReplicas</code></li> <li>Performance: <code>walStorage</code> (separate WAL disk)</li> <li>Networking: <code>primaryUpdateStrategy</code>, <code>primaryUpdateMethod</code></li> </ul>"},{"location":"charts/cnpg-database-manager/#maintainers","title":"Maintainers","text":"Name Email Url encircle360-oss oss@encircle360.com"},{"location":"charts/cnpg-database-manager/#source-code","title":"Source Code","text":"<ul> <li>https://github.com/encircle360-oss/helm-charts</li> <li>https://cloudnative-pg.io/</li> </ul>"},{"location":"charts/cnpg-database-manager/#values","title":"Values","text":"Key Type Default Description clusters object <code>{}</code> (no clusters deployed by default) PostgreSQL cluster configurations. Each key represents a cluster name."},{"location":"charts/cnpg-database-manager/#configuration-parameters","title":"Configuration Parameters","text":"<p>The chart uses a dynamic configuration structure where each PostgreSQL cluster is defined under the <code>clusters</code> key. Below are the detailed configuration options:</p>"},{"location":"charts/cnpg-database-manager/#cluster-configuration","title":"Cluster Configuration","text":"Parameter Type Required Default Description <code>clusters.&lt;name&gt;.enabled</code> bool Yes - Enable or disable this cluster <code>clusters.&lt;name&gt;.instances</code> int Yes - Number of PostgreSQL instances (replicas) <code>clusters.&lt;name&gt;.imageName</code> string Yes - PostgreSQL container image with tag <code>clusters.&lt;name&gt;.storage.size</code> string Yes - Size of persistent volume (e.g., <code>50Gi</code>) <code>clusters.&lt;name&gt;.storage.storageClass</code> string No - Storage class name <code>clusters.&lt;name&gt;.resources.requests.memory</code> string No - Memory request (e.g., <code>2Gi</code>) <code>clusters.&lt;name&gt;.resources.requests.cpu</code> string No - CPU request (e.g., <code>1000m</code>) <code>clusters.&lt;name&gt;.resources.limits.memory</code> string No - Memory limit (e.g., <code>4Gi</code>) <code>clusters.&lt;name&gt;.resources.limits.cpu</code> string No - CPU limit (e.g., <code>2000m</code>) <code>clusters.&lt;name&gt;.maxConnections</code> string No <code>\"200\"</code> Maximum number of connections <code>clusters.&lt;name&gt;.sharedBuffers</code> string No <code>\"256MB\"</code> Shared memory buffers <code>clusters.&lt;name&gt;.effectiveCacheSize</code> string No <code>\"1GB\"</code> Effective cache size <code>clusters.&lt;name&gt;.maintenanceWorkMem</code> string No <code>\"64MB\"</code> Maintenance work memory <code>clusters.&lt;name&gt;.checkpointCompletionTarget</code> string No <code>\"0.9\"</code> Checkpoint completion target <code>clusters.&lt;name&gt;.walBuffers</code> string No <code>\"16MB\"</code> WAL buffers <code>clusters.&lt;name&gt;.defaultStatisticsTarget</code> string No <code>\"100\"</code> Default statistics target <code>clusters.&lt;name&gt;.randomPageCost</code> string No <code>\"1.1\"</code> Random page cost <code>clusters.&lt;name&gt;.effectiveIoConcurrency</code> string No <code>\"200\"</code> Effective I/O concurrency <code>clusters.&lt;name&gt;.workMem</code> string No <code>\"4MB\"</code> Work memory per operation <code>clusters.&lt;name&gt;.minWalSize</code> string No <code>\"1GB\"</code> Minimum WAL size <code>clusters.&lt;name&gt;.maxWalSize</code> string No <code>\"4GB\"</code> Maximum WAL size <code>clusters.&lt;name&gt;.parameters</code> object No <code>{}</code> Additional custom PostgreSQL parameters <code>clusters.&lt;name&gt;.monitoring.enabled</code> bool No <code>false</code> Enable Prometheus monitoring <code>clusters.&lt;name&gt;.backup.enabled</code> bool No <code>false</code> Enable automated backups <code>clusters.&lt;name&gt;.backup.schedule</code> string No <code>\"0 0 0 * * *\"</code> Backup schedule (cron format) <code>clusters.&lt;name&gt;.backup.retentionPolicy</code> string No <code>\"30d\"</code> Backup retention policy <code>clusters.&lt;name&gt;.backup.s3.bucket</code> string Yes (if S3) - S3 bucket name for backups <code>clusters.&lt;name&gt;.backup.s3.endpoint</code> string Yes (if S3) - S3 endpoint URL <code>clusters.&lt;name&gt;.backup.s3.region</code> string No - S3 region <code>clusters.&lt;name&gt;.backup.s3.accessKeyId</code> string Yes (if S3) - S3 access key ID <code>clusters.&lt;name&gt;.backup.s3.secretAccessKey</code> string Yes (if S3) - S3 secret access key <code>clusters.&lt;name&gt;.backup.s3.credentials.existingSecret</code> string No - Existing secret (alternative to accessKeyId/secretAccessKey) <code>clusters.&lt;name&gt;.initdb.postInitSQL</code> array No <code>[]</code> Custom SQL statements after init"},{"location":"charts/cnpg-database-manager/#database-configuration","title":"Database Configuration","text":"Parameter Type Required Default Description <code>clusters.&lt;name&gt;.databases[].name</code> string Yes - Database name <code>clusters.&lt;name&gt;.databases[].owner</code> string Yes - Database owner/user name <code>clusters.&lt;name&gt;.databases[].targetNamespace</code> string No - Target namespace for secret replication <code>clusters.&lt;name&gt;.databases[].existingSecret</code> string No - Use existing secret for credentials <code>clusters.&lt;name&gt;.databases[].encoding</code> string No <code>\"UTF8\"</code> Database encoding <code>clusters.&lt;name&gt;.databases[].locale</code> string No <code>\"C\"</code> Database locale"},{"location":"charts/cnpg-database-manager/#how-it-works","title":"How It Works","text":""},{"location":"charts/cnpg-database-manager/#database-and-user-creation","title":"Database and User Creation","text":"<p>For each database defined in <code>clusters.&lt;name&gt;.databases[]</code>:</p> <ol> <li>Managed Roles: PostgreSQL roles/users are created declaratively via <code>spec.managed.roles</code> in the Cluster CRD</li> <li>Each unique <code>owner</code> from all databases becomes a managed role</li> <li>Roles are deduplicated (multiple databases can share the same owner)</li> <li> <p>Role passwords are stored in separate secrets (<code>&lt;cluster&gt;-&lt;owner&gt;-password</code>)</p> </li> <li> <p>Database Resource: A CloudNativePG <code>Database</code> resource is created</p> </li> <li>Database name from <code>name</code> field</li> <li>Owner references the managed role</li> <li> <p>Database CRD automatically creates the PostgreSQL database</p> </li> <li> <p>Secret Generation: A Kubernetes Secret is created with connection details:</p> </li> <li><code>username</code>: The database owner</li> <li><code>password</code>: Auto-generated secure password (persisted across upgrades)</li> <li><code>dbname</code>: Database name</li> <li><code>host</code>: Cluster service endpoint</li> <li><code>port</code>: PostgreSQL port (5432)</li> <li><code>jdbc-url</code>: JDBC connection string</li> <li><code>uri</code>: PostgreSQL URI connection string</li> </ol>"},{"location":"charts/cnpg-database-manager/#secrets-management","title":"Secrets Management","text":"<p>The chart generates only the secrets required by CloudNativePG for managed roles:</p> <p>Role Password Secrets: <code>&lt;cluster-name&gt;-&lt;owner-name&gt;-password</code> - Example: For cluster <code>main</code> and owner <code>keycloak</code>, the secret is <code>main-keycloak-password</code> - Type: <code>kubernetes.io/basic-auth</code> - Created in the same namespace as the Helm chart - Used by CloudNativePG's <code>spec.managed.roles.passwordSecret</code> - Shared across multiple databases with the same owner</p>"},{"location":"charts/cnpg-database-manager/#application-credentials","title":"Application Credentials","text":"<p>Applications need to create their own secrets in their respective namespaces with database connection details.</p> <p>You can retrieve the password from the role secret and create application secrets manually:</p> <pre><code># Get the password from CNPG namespace\nPASSWORD=$(kubectl -n cnpg-databases get secret main-keycloak-password \\\n  -o jsonpath='{.data.password}' | base64 -d)\n\n# Create application secret in app namespace\nkubectl -n keycloak create secret generic keycloak-db \\\n  --from-literal=username=keycloak \\\n  --from-literal=password=\"$PASSWORD\" \\\n  --from-literal=host=main-rw.cnpg-databases.svc.cluster.local \\\n  --from-literal=port=5432 \\\n  --from-literal=database=keycloak\n</code></pre> <p>For GitOps with SOPS encryption:</p> <pre><code># keycloak/secrets.enc.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: keycloak-db\n  namespace: keycloak\ntype: Opaque\nstringData:\n  username: keycloak\n  password: ENC[AES256_GCM,data:xxx,iv:yyy,tag:zzz,type:str]  # encrypted with sops\n  host: main-rw.cnpg-databases.svc.cluster.local\n  port: \"5432\"\n  database: keycloak\n  # Optional convenience fields\n  jdbc-url: jdbc:postgresql://main-rw.cnpg-databases.svc.cluster.local:5432/keycloak\n  uri: postgresql://keycloak:${password}@main-rw.cnpg-databases.svc.cluster.local:5432/keycloak\n</code></pre> <p>Future: External Secrets Operator Integration</p> <p>For automated secret distribution, consider using External Secrets Operator:</p> <pre><code>apiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: keycloak-db\n  namespace: keycloak\nspec:\n  secretStoreRef:\n    name: kubernetes-backend\n  target:\n    name: keycloak-db\n  data:\n  - secretKey: password\n    remoteRef:\n      key: main-keycloak-password\n      property: password\n</code></pre>"},{"location":"charts/cnpg-database-manager/#use-cases","title":"Use Cases","text":""},{"location":"charts/cnpg-database-manager/#microservices-consolidation","title":"Microservices Consolidation","text":"<p>Instead of running separate PostgreSQL instances for each microservice:</p> <pre><code>clusters:\n  microservices:\n    enabled: true\n    instances: 3\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 100Gi\n    databases:\n      - name: auth-service\n        owner: auth\n      - name: user-service\n        owner: users\n      - name: order-service\n        owner: orders\n      - name: payment-service\n        owner: payments\n</code></pre>"},{"location":"charts/cnpg-database-manager/#multi-tenant-saas","title":"Multi-Tenant SaaS","text":"<p>Isolate tenant databases while sharing infrastructure:</p> <pre><code>clusters:\n  saas-prod:\n    enabled: true\n    instances: 5\n    imageName: ghcr.io/cloudnative-pg/postgresql:17.2\n    storage:\n      size: 500Gi\n    databases:\n      - name: tenant-acme\n        owner: tenant_acme\n      - name: tenant-widgets\n        owner: tenant_widgets\n      - name: tenant-global\n        owner: tenant_global\n</code></pre>"},{"location":"charts/cnpg-database-manager/#developmentstagingproduction","title":"Development/Staging/Production","text":"<p>Manage all environments from one chart:</p> <pre><code>clusters:\n  dev:\n    enabled: true\n    instances: 1\n    storage:\n      size: 10Gi\n    databases:\n      - name: app-dev\n        owner: dev\n\n  staging:\n    enabled: true\n    instances: 2\n    storage:\n      size: 50Gi\n    databases:\n      - name: app-staging\n        owner: staging\n\n  prod:\n    enabled: true\n    instances: 3\n    storage:\n      size: 200Gi\n    backup:\n      enabled: true\n    databases:\n      - name: app-prod\n        owner: prod\n</code></pre>"},{"location":"charts/cnpg-database-manager/#troubleshooting","title":"Troubleshooting","text":""},{"location":"charts/cnpg-database-manager/#check-cluster-status","title":"Check Cluster Status","text":"<pre><code>kubectl get cluster\nkubectl describe cluster &lt;cluster-name&gt;\n</code></pre>"},{"location":"charts/cnpg-database-manager/#check-database-creation","title":"Check Database Creation","text":"<pre><code>kubectl get database\nkubectl describe database &lt;cluster-name&gt;-&lt;database-name&gt;\n</code></pre>"},{"location":"charts/cnpg-database-manager/#view-generated-secrets","title":"View Generated Secrets","text":"<pre><code>kubectl get secret &lt;cluster-name&gt;-&lt;database-name&gt;-app -o yaml\n</code></pre>"},{"location":"charts/cnpg-database-manager/#check-operator-logs","title":"Check Operator Logs","text":"<pre><code>kubectl logs -n cnpg-system deployment/cnpg-controller-manager\n</code></pre>"},{"location":"charts/cnpg-database-manager/#comparison-with-official-charts","title":"Comparison with Official Charts","text":"Feature Official <code>cluster</code> Chart This Chart Cluster Management \u2705 \u2705 Multiple Databases \u274c (one per deployment) \u2705 (many per cluster) Automatic Secrets \u274c \u2705 Secret Replication \u274c \u2705 Multi-Cluster \u274c \u2705 Backup Configuration \u2705 \u2705 Monitoring \u2705 \u2705"},{"location":"charts/cnpg-database-manager/#support-professional-services","title":"Support &amp; Professional Services","text":""},{"location":"charts/cnpg-database-manager/#community-support","title":"Community Support","text":"<p>For issues and questions about this Helm chart: - Open an issue in GitHub Issues - Start a discussion in GitHub Discussions</p> <p>For CloudNativePG specific issues: - Visit the CloudNativePG GitHub repository - Check the CloudNativePG documentation</p>"},{"location":"charts/cnpg-database-manager/#professional-support","title":"Professional Support","text":"<p>For professional support, consulting, custom development, or enterprise solutions, contact hello@encircle360.com</p>"},{"location":"charts/cnpg-database-manager/#disclaimer","title":"Disclaimer","text":"<p>\u26a0\ufe0f This chart is under active development and NOT production-ready.</p> <p>This Helm chart is provided \"AS IS\" without warranty of any kind. encircle360 GmbH and the contributors: - Make no warranties about the completeness, reliability, or accuracy of this chart - Are not liable for any damages arising from the use of this chart - Strongly recommend thorough testing in non-production environments only - Do not recommend this chart for production use at this time</p> <p>Use this chart at your own risk. For production-ready PostgreSQL solutions with SLA requirements, contact our professional support services at hello@encircle360.com</p>"},{"location":"charts/cnpg-database-manager/#license","title":"License","text":"<p>This chart is licensed under the Apache License 2.0. See LICENSE for details.</p>"},{"location":"charts/cnpg-database-manager/#default-values","title":"Default Values","text":"<p>For a complete list of configuration options, see the values.yaml file.</p>"},{"location":"charts/roundcube/","title":"roundcube","text":"<p>A free and open source webmail solution with a desktop-like user interface</p> <p>Homepage: https://github.com/encircle360-oss/helm-charts/tree/main/charts/roundcube</p>"},{"location":"charts/roundcube/#introduction","title":"Introduction","text":"<p>This chart bootstraps a Roundcube deployment on a Kubernetes cluster using the Helm package manager.</p> <p>Roundcube is a browser-based multilingual IMAP client with an application-like user interface. It provides full functionality expected from an email client, including MIME support, address book, folder management, message searching and spell checking.</p>"},{"location":"charts/roundcube/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes 1.27+</li> <li>Helm 3.14.0+</li> <li>PV provisioner support in the underlying infrastructure (if using SQLite)</li> <li>Access to an IMAP/SMTP mail server</li> </ul>"},{"location":"charts/roundcube/#installing-the-chart","title":"Installing the Chart","text":"<p>To install the chart with the release name <code>my-roundcube</code>:</p> <pre><code>helm repo add encircle360-oss https://encircle360-oss.github.io/helm-charts/\nhelm repo update\nhelm install my-roundcube encircle360-oss/roundcube\n</code></pre>"},{"location":"charts/roundcube/#uninstalling-the-chart","title":"Uninstalling the Chart","text":"<p>To uninstall/delete the <code>my-roundcube</code> deployment:</p> <pre><code>helm uninstall my-roundcube\n</code></pre>"},{"location":"charts/roundcube/#configuration","title":"Configuration","text":""},{"location":"charts/roundcube/#basic-configuration","title":"Basic Configuration","text":"<p>The following table lists the most important configurable parameters:</p> Parameter Description Default <code>roundcube.defaultHost</code> Default IMAP server address <code>ssl://mail.example.com</code> <code>roundcube.defaultPort</code> Default IMAP server port <code>993</code> <code>roundcube.smtpServer</code> SMTP server address <code>tls://mail.example.com</code> <code>roundcube.smtpPort</code> SMTP server port <code>587</code>"},{"location":"charts/roundcube/#database-configuration","title":"Database Configuration","text":"<p>This chart supports three database backends:</p>"},{"location":"charts/roundcube/#sqlite-default","title":"SQLite (Default)","text":"<pre><code>database:\n  type: sqlite\npersistence:\n  enabled: true\n  size: 5Gi\n</code></pre>"},{"location":"charts/roundcube/#mysqlmariadb","title":"MySQL/MariaDB","text":"<pre><code>database:\n  type: mysql\n  external:\n    host: mysql.example.com\n    port: 3306\n    name: roundcube\n    user: roundcube\n    password: secretpassword\n</code></pre>"},{"location":"charts/roundcube/#postgresql","title":"PostgreSQL","text":"<pre><code>database:\n  type: pgsql\n  external:\n    host: postgresql.example.com\n    port: 5432\n    name: roundcube\n    user: roundcube\n    password: secretpassword\n</code></pre>"},{"location":"charts/roundcube/#ingress-configuration","title":"Ingress Configuration","text":"<p>To expose Roundcube via Ingress:</p> <pre><code>ingress:\n  enabled: true\n  className: nginx\n  annotations:\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n  hosts:\n    - host: webmail.example.com\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - secretName: roundcube-tls\n      hosts:\n        - webmail.example.com\n</code></pre>"},{"location":"charts/roundcube/#session-storage-with-redis","title":"Session Storage with Redis","text":"<p>For better performance in multi-replica deployments:</p> <pre><code>redis:\n  enabled: true\n  host: redis-master.default.svc.cluster.local\n  port: 6379\n  password: redispassword\n</code></pre>"},{"location":"charts/roundcube/#installing-additional-plugins-via-composer","title":"Installing Additional Plugins via Composer","text":"<p>Roundcube supports installing additional plugins via composer. You can specify plugins using the <code>composerPlugins</code> list:</p> <pre><code>roundcube:\n  plugins:\n    - archive\n    - zipdownload\n  composerPlugins:\n    - johndoh/contextmenu\n    - sblaisot/automatic_addressbook\n    - texxasrulez/persistent_login\n</code></pre> <p>This will: - Install the specified plugins via composer during container startup - Automatically make them available in Roundcube - Work with any plugin available on Packagist</p> <p>Popular composer plugins include: - <code>johndoh/contextmenu</code> - Context menu for message list - <code>sblaisot/automatic_addressbook</code> - Automatically add recipients to address book - <code>texxasrulez/persistent_login</code> - Stay logged in across sessions - <code>weird-birds/thunderbird_labels</code> - Thunderbird-style labels</p>"},{"location":"charts/roundcube/#custom-configuration","title":"Custom Configuration","text":"<p>You can provide custom Roundcube configuration:</p> <pre><code>roundcube:\n  customConfig: |\n    &lt;?php\n    $config['spell_engine'] = 'aspell';\n    $config['enable_spellcheck'] = true;\n    // Additional custom configuration\n</code></pre>"},{"location":"charts/roundcube/#plugin-specific-configuration","title":"Plugin-Specific Configuration","text":"<p>Many Roundcube plugins require their own <code>config.inc.php</code> file in the plugin directory. You can provide plugin-specific configurations using the <code>pluginConfigs</code> map:</p> <pre><code>roundcube:\n  plugins:\n    - identity_from_directory\n    - persistent_login\n  pluginConfigs:\n    identity_from_directory: |\n      &lt;?php\n      $config['identity_from_directory_ldap_host'] = ['ldap://localhost:389'];\n      $config['identity_from_directory_ldap_base_dn'] = 'dc=example,dc=com';\n      $config['identity_from_directory_ldap_bind_dn'] = 'cn=admin,dc=example,dc=com';\n      $config['identity_from_directory_ldap_bind_pass'] = 'secret';\n    persistent_login: |\n      &lt;?php\n      $config['login_lifetime'] = 30;\n      $config['login_secure_cookie'] = true;\n      $config['login_token_expiration'] = 3600;\n</code></pre> <p>This will: - Create a separate ConfigMap for each plugin configuration - Mount each config directly to <code>/var/www/html/plugins/&lt;plugin-name&gt;/config.inc.php</code> - No init containers or lifecycle hooks required - Configs are immediately available when the container starts</p>"},{"location":"charts/roundcube/#plugin-specific-configuration-with-secrets","title":"Plugin-Specific Configuration with Secrets","text":"<p>For sensitive plugin configuration values (passwords, API tokens, OAuth secrets), use the <code>secretEnvVars</code> feature for a fully declarative approach:</p> <p>Option 1: Using secretEnvVars (Recommended - Fully Declarative)</p> <pre><code>roundcube:\n  plugins:\n    - identity_from_directory\n  pluginConfigs:\n    identity_from_directory: |\n      &lt;?php\n      $config['identity_from_directory_ldap_host'] = ['ldap://localhost:389'];\n      $config['identity_from_directory_ldap_base_dn'] = 'dc=example,dc=com';\n      $config['identity_from_directory_ldap_bind_dn'] = 'cn=admin,dc=example,dc=com';\n      $config['identity_from_directory_ldap_bind_pass'] = getenv('LDAP_BIND_PASSWORD');\n  secretEnvVars:\n    LDAP_BIND_PASSWORD: \"my-secret-password\"\n    API_KEY: \"my-api-key\"\n    OAUTH_CLIENT_SECRET: \"oauth-secret\"\n</code></pre> <p>This will: - Automatically create a Kubernetes Secret - Inject environment variables into the container - Work with SOPS/sealed-secrets by encrypting your <code>values.yaml</code> or separate <code>secrets.yaml</code> - No external Secret creation or Helmfile hooks needed</p> <p>Security with SOPS:</p> <pre><code># Encrypt your values file with SOPS\nsops -e values.yaml &gt; values.enc.yaml\n\n# Deploy with encrypted values\nhelm secrets upgrade my-release ./roundcube -f values.enc.yaml\n</code></pre> <p>Option 2: Using External Secrets (For existing secret management solutions)</p> <pre><code>roundcube:\n  pluginConfigs:\n    identity_from_directory: |\n      &lt;?php\n      $config['identity_from_directory_ldap_bind_pass'] = getenv('LDAP_BIND_PASSWORD');\n  extraEnvVars:\n    - name: LDAP_BIND_PASSWORD\n      valueFrom:\n        secretKeyRef:\n          name: my-existing-secret\n          key: password\n</code></pre> <p>You must create the Secret separately (manually or via external-secrets operator):</p> <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: my-existing-secret\ntype: Opaque\nstringData:\n  password: my-secret-password\n</code></pre> <p>Security Benefits: - <code>secretEnvVars</code>: Fully declarative, works with SOPS/sealed-secrets, no external tools needed - <code>extraEnvVars</code>: Supports external secret management (External Secrets Operator, Vault, etc.) - Secrets separated from configuration - Secrets never stored in ConfigMaps - Environment variables accessible via <code>getenv()</code> in PHP</p>"},{"location":"charts/roundcube/#multi-domain-support","title":"Multi-Domain Support","text":"<p>Roundcube can serve multiple domains with completely different configurations:</p> <pre><code>roundcube:\n  multiDomain:\n    enabled: true\n    domains:\n      - name: \"mail.example.com\"\n        config: |\n          $config['default_host'] = 'ssl://imap.example.com:993';\n          $config['smtp_server'] = 'tls://smtp.example.com:587';\n          $config['managesieve_host'] = 'imap.example.com';\n          $config['managesieve_port'] = 4190;\n          $config['plugins'] = array('managesieve', 'password', 'archive');\n      - name: \"mail.company.org\"\n        config: |\n          $config['default_host'] = 'ssl://mail.company.org:993';\n          $config['smtp_server'] = 'ssl://mail.company.org:465';\n          $config['smtp_conn_options'] = array(\n            'ssl' =&gt; array('verify_peer' =&gt; false)\n          );\n          $config['password_algorithm'] = 'sha256-crypt';\n          $config['password_db_dsn'] = 'mysql://user:pass@localhost/users';\n          $config['plugins'] = array('password', 'vacation', 'forward');\n\ningress:\n  enabled: true\n  hosts:\n    - host: mail.example.com\n      paths:\n        - path: /\n    - host: mail.company.org\n      paths:\n        - path: /\n</code></pre> <p>With this configuration: - Each domain can have completely different settings - Full control over IMAP, SMTP, ManageSieve, OAuth, plugins, etc. - Users accessing different domains get their specific configuration - Fallback to default settings if domain is not configured</p>"},{"location":"charts/roundcube/#maintainers","title":"Maintainers","text":"Name Email Url encircle360-oss oss@encircle360.com"},{"location":"charts/roundcube/#source-code","title":"Source Code","text":"<ul> <li>https://github.com/roundcube/roundcubemail</li> <li>https://github.com/encircle360-oss/helm-charts</li> </ul>"},{"location":"charts/roundcube/#values","title":"Values","text":"Key Type Default Description affinity object <code>{}</code> autoscaling.enabled bool <code>false</code> autoscaling.maxReplicas int <code>10</code> autoscaling.minReplicas int <code>1</code> autoscaling.targetCPUUtilizationPercentage int <code>80</code> autoscaling.targetMemoryUtilizationPercentage int <code>80</code> database.external.existingSecret string <code>\"\"</code> database.external.existingSecretPasswordKey string <code>\"password\"</code> database.external.existingSecretUserKey string <code>\"username\"</code> database.external.host string <code>\"\"</code> database.external.name string <code>\"roundcube\"</code> database.external.password string <code>\"\"</code> database.external.port int <code>3306</code> database.external.user string <code>\"roundcube\"</code> database.type string <code>\"sqlite\"</code> fullnameOverride string <code>\"\"</code> image.pullPolicy string <code>\"IfNotPresent\"</code> image.repository string <code>\"roundcube/roundcubemail\"</code> image.tag string <code>\"\"</code> imagePullSecrets list <code>[]</code> ingress.annotations object <code>{}</code> ingress.className string <code>\"\"</code> ingress.enabled bool <code>false</code> ingress.hosts[0].host string <code>\"webmail.example.com\"</code> ingress.hosts[0].paths[0].path string <code>\"/\"</code> ingress.hosts[0].paths[0].pathType string <code>\"Prefix\"</code> ingress.tls list <code>[]</code> initContainers list <code>[]</code> livenessProbe.enabled bool <code>true</code> livenessProbe.failureThreshold int <code>3</code> livenessProbe.initialDelaySeconds int <code>30</code> livenessProbe.periodSeconds int <code>10</code> livenessProbe.successThreshold int <code>1</code> livenessProbe.timeoutSeconds int <code>5</code> memcached.enabled bool <code>false</code> memcached.host string <code>\"\"</code> memcached.port int <code>11211</code> nameOverride string <code>\"\"</code> nodeSelector object <code>{}</code> persistence.accessMode string <code>\"ReadWriteOnce\"</code> persistence.enabled bool <code>true</code> persistence.existingClaim string <code>\"\"</code> persistence.logsPath string <code>\"/var/roundcube/logs\"</code> persistence.size string <code>\"5Gi\"</code> persistence.sqlitePath string <code>\"/var/roundcube/db\"</code> persistence.storageClass string <code>\"\"</code> persistence.tempPath string <code>\"/tmp/roundcube\"</code> podAnnotations object <code>{}</code> podSecurityContext.fsGroup int <code>33</code> podSecurityContext.runAsNonRoot bool <code>true</code> podSecurityContext.runAsUser int <code>33</code> readinessProbe.enabled bool <code>true</code> readinessProbe.failureThreshold int <code>3</code> readinessProbe.initialDelaySeconds int <code>5</code> readinessProbe.periodSeconds int <code>10</code> readinessProbe.successThreshold int <code>1</code> readinessProbe.timeoutSeconds int <code>5</code> redis.enabled bool <code>false</code> redis.existingSecret string <code>\"\"</code> redis.existingSecretPasswordKey string <code>\"password\"</code> redis.host string <code>\"\"</code> redis.password string <code>\"\"</code> redis.port int <code>6379</code> replicaCount int <code>1</code> resources.limits.memory string <code>\"512Mi\"</code> resources.requests.cpu string <code>\"100m\"</code> resources.requests.memory string <code>\"256Mi\"</code> roundcube.composerPlugins list <code>[]</code> roundcube.customConfig string <code>\"\"</code> roundcube.defaultHost string <code>\"ssl://mail.example.com\"</code> roundcube.defaultPort int <code>993</code> roundcube.desKey string <code>\"\"</code> roundcube.extraEnvVars list <code>[]</code> roundcube.extraVolumeMounts list <code>[]</code> roundcube.extraVolumes list <code>[]</code> roundcube.multiDomain.domains list <code>[]</code> roundcube.multiDomain.enabled bool <code>false</code> roundcube.pluginConfigs object <code>{}</code> roundcube.plugins[0] string <code>\"archive\"</code> roundcube.plugins[1] string <code>\"zipdownload\"</code> roundcube.plugins[2] string <code>\"managesieve\"</code> roundcube.productName string <code>\"Roundcube Webmail\"</code> roundcube.secretEnvVars object <code>{}</code> roundcube.skin string <code>\"elastic\"</code> roundcube.smtpPass string <code>\"%p\"</code> roundcube.smtpPort int <code>587</code> roundcube.smtpServer string <code>\"tls://mail.example.com\"</code> roundcube.smtpUser string <code>\"%u\"</code> roundcube.supportUrl string <code>\"\"</code> roundcube.uploadMaxFilesize string <code>\"25M\"</code> securityContext.allowPrivilegeEscalation bool <code>false</code> securityContext.capabilities.drop[0] string <code>\"ALL\"</code> securityContext.readOnlyRootFilesystem bool <code>false</code> service.annotations object <code>{}</code> service.port int <code>80</code> service.targetPort int <code>80</code> service.type string <code>\"ClusterIP\"</code> serviceAccount.annotations object <code>{}</code> serviceAccount.create bool <code>true</code> serviceAccount.name string <code>\"\"</code> sidecarContainers list <code>[]</code> startupProbe.enabled bool <code>false</code> startupProbe.failureThreshold int <code>30</code> startupProbe.initialDelaySeconds int <code>0</code> startupProbe.periodSeconds int <code>10</code> startupProbe.successThreshold int <code>1</code> startupProbe.timeoutSeconds int <code>5</code> tolerations list <code>[]</code>"},{"location":"charts/roundcube/#examples","title":"Examples","text":""},{"location":"charts/roundcube/#minimal-configuration-with-sqlite","title":"Minimal Configuration with SQLite","text":"<pre><code>roundcube:\n  defaultHost: \"ssl://imap.gmail.com\"\n  defaultPort: 993\n  smtpServer: \"tls://smtp.gmail.com\"\n  smtpPort: 587\n\ndatabase:\n  type: sqlite\n\npersistence:\n  enabled: true\n</code></pre>"},{"location":"charts/roundcube/#production-configuration-with-external-database","title":"Production Configuration with External Database","text":"<pre><code>replicaCount: 3\n\nroundcube:\n  defaultHost: \"ssl://mail.company.com\"\n  smtpServer: \"tls://mail.company.com\"\n\ndatabase:\n  type: mysql\n  external:\n    host: mysql.company.local\n    name: roundcube_prod\n    user: roundcube\n    existingSecret: roundcube-db-secret\n\nredis:\n  enabled: true\n  host: redis.company.local\n\ningress:\n  enabled: true\n  className: nginx\n  hosts:\n    - host: webmail.company.com\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - secretName: webmail-tls\n      hosts:\n        - webmail.company.com\n\nresources:\n  requests:\n    cpu: 200m\n    memory: 256Mi\n  limits:\n    cpu: 1000m\n    memory: 1Gi\n\nautoscaling:\n  enabled: true\n  minReplicas: 3\n  maxReplicas: 10\n</code></pre>"},{"location":"charts/roundcube/#troubleshooting","title":"Troubleshooting","text":""},{"location":"charts/roundcube/#logs","title":"Logs","text":"<p>View Roundcube logs:</p> <pre><code>kubectl logs -l app.kubernetes.io/name=roundcube\n</code></pre>"},{"location":"charts/roundcube/#database-connection-issues","title":"Database Connection Issues","text":"<p>If you're experiencing database connection issues:</p> <ol> <li>Verify database credentials</li> <li>Check network connectivity to database host</li> <li>Ensure database exists and user has proper permissions</li> </ol>"},{"location":"charts/roundcube/#session-issues","title":"Session Issues","text":"<p>If users are getting logged out frequently:</p> <ol> <li>Enable Redis for session storage</li> <li>Ensure all replicas can access the same session store</li> <li>Check session timeout settings</li> </ol>"},{"location":"charts/roundcube/#support-professional-services","title":"Support &amp; Professional Services","text":""},{"location":"charts/roundcube/#community-support","title":"Community Support","text":"<p>For issues and questions about this Helm chart: - Open an issue in GitHub Issues - Start a discussion in GitHub Discussions</p> <p>For Roundcube specific issues: - Visit the Roundcube GitHub repository - Check the Roundcube documentation</p>"},{"location":"charts/roundcube/#professional-support","title":"Professional Support","text":"<p>For professional support, consulting, custom development, or enterprise solutions, contact hello@encircle360.com</p>"},{"location":"charts/roundcube/#disclaimer","title":"Disclaimer","text":"<p>This Helm chart is provided \"AS IS\" without warranty of any kind. encircle360 GmbH and the contributors: - Make no warranties about the completeness, reliability, or accuracy of this chart - Are not liable for any damages arising from the use of this chart - Recommend thorough testing in non-production environments before production use</p> <p>Use this chart at your own risk. For production deployments with SLA requirements, consider our professional support services.</p>"},{"location":"charts/roundcube/#license","title":"License","text":"<p>This chart is licensed under the Apache License 2.0. See LICENSE for details.</p>"}]}